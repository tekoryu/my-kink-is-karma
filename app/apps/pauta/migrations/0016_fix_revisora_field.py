# Generated by Django 4.2.7 on 2025-09-08 19:12

from django.db import migrations


def fix_revisora_field(apps, schema_editor):
    """
    Set revisora field automatically based on iniciadora for existing records.
    When iniciadora is CD, revisora becomes SF and vice versa.
    """
    Proposicao = apps.get_model('pauta', 'Proposicao')
    
    updated_count = 0
    
    # Update records where iniciadora is CD
    cd_proposicoes = Proposicao.objects.filter(iniciadora='CD', revisora__isnull=True)
    for proposicao in cd_proposicoes:
        proposicao.revisora = 'SF'
        proposicao.save()
        updated_count += 1
    
    # Update records where iniciadora is SF  
    sf_proposicoes = Proposicao.objects.filter(iniciadora='SF', revisora__isnull=True)
    for proposicao in sf_proposicoes:
        proposicao.revisora = 'CD'
        proposicao.save()
        updated_count += 1
    
    print(f"Updated {updated_count} proposições with revisora field")


def reverse_fix_revisora_field(apps, schema_editor):
    """
    Reverse the migration by clearing revisora field.
    """
    Proposicao = apps.get_model('pauta', 'Proposicao')
    
    cleared_count = Proposicao.objects.filter(
        iniciadora__in=['CD', 'SF'], 
        revisora__isnull=False
    ).update(revisora=None)
    
    print(f"Cleared revisora field for {cleared_count} proposições")


class Migration(migrations.Migration):

    dependencies = [
        ('pauta', '0015_rename_casa_inicial_proposicao_iniciadora_and_more'),
    ]

    operations = [
        migrations.RunPython(fix_revisora_field, reverse_fix_revisora_field),
    ]
